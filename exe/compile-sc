#!/bin/sh

# description
# * compiles the sc source code to c
# dependencies
# * sph-sc
# * clang-format

root="$PWD"
s=source/sc
sm="$s/main"
c="$root/source/c-precompiled"
export SC_LOAD_PATH="$root/$s"

copy_example_config() {
  # the config file is not versioned so that users can customise it
  if [ ! -f "$sm/config.sc" ]
  then
    cp "$sm/config.example.sc" "$sm/config.sc"
  fi
}

copy_submodules() {
  # copy code files from submodules.
  # to not have the whole submodule repository in the source directory
  a=submodules/sph-sc-lib/source/sc
  b="$a/sph"
  f="$s/foreign"
  mkdir -p "$f/sph" &&
  cp --update --target-directory="$f" "$a/sph.sc" &&
  cp --update --target-directory="$f/sph" \
     "$b/status.sc" "$b/i-array.sc" "$b/imht-set.sc" \
     "$b/string.sc" "$b/filesystem.sc" "$b/helper.sc"
}

compile_sc() {
  # create the c source code
  copy_example_config &&
  copy_submodules &&
  cd "$s" &&
  find -type f -name "*.sc" -exec sc --parents '{}' "$c" \; &&
  cd "$root" &&
  find "$c" -type f -exec ./exe/format-c -i '{}' \; &&
	# config.c is user variable and already in sph-db.h
	rm "$c/main/config.c" &&
  mv "$c/main/sph-db.c" "$c/main/sph-db.h"
  mv "$c/main/sph-db-extra.c" "$c/main/sph-db-extra.h"
}

mkdir -p "$c" &&
compile_sc $@
